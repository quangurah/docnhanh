version: '3.8'

services:
  # Traefik reverse proxy with SSL
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - "8080:80"   # HTTP (redirected to HTTPS)
      - "8443:443"  # HTTPS
      - "8081:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
      - ./certificates:/etc/traefik/certificates
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=your-email@example.com
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/certificates/acme.json
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https

  # DuckDNS updater
  duckdns:
    image: linuxserver/duckdns
    container_name: duckdns
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Ho_Chi_Minh
      - SUBDOMAINS=docnhanh
      - TOKEN=YOUR_DUCKDNS_TOKEN_HERE
      - LOG_FILE=false

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: docnhanh-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: docnhanh
      POSTGRES_USER: docnhanh
      POSTGRES_PASSWORD: docnhanh123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - docnhanh-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: docnhanh-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - docnhanh-network

  # Backend API
  backend:
    build: ./backend
    container_name: docnhanh-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://docnhanh:docnhanh123@postgres:5432/docnhanh
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here
      - ENVIRONMENT=production
    depends_on:
      - postgres
      - redis
    networks:
      - docnhanh-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`docnhanh.duckdns.org`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  # Nginx (optional, for serving static files)
  nginx:
    image: nginx:alpine
    container_name: docnhanh-nginx
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    networks:
      - docnhanh-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`docnhanh.duckdns.org`) && PathPrefix(`/static`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=letsencrypt"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

volumes:
  postgres_data:
  redis_data:

networks:
  docnhanh-network:
    driver: bridge
